@model IEnumerable<ProyectoFinal_G8.Models.Cita>
@using Microsoft.AspNetCore.Identity
@using ProyectoFinal_G8.Models
@inject UserManager<Usuario> UserManager

@{
    ViewData["Title"] = ViewData["VistaTitulo"] ?? "Citas";
    var currentUserID = ViewData["CurrentUserID"] != null ? (int)ViewData["CurrentUserID"] : 0;
    bool isAdminOrVet = User.IsInRole("Admin") || User.IsInRole("Veterinario");
}

<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <p>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus mr-1"></i> @(User.IsInRole("Cliente") ? "Solicitar Nueva Cita" : "Crear Nueva Cita")
        </a>
    </p>

    @if (isAdminOrVet)
    {
        <div class="card card-body bg-light mb-4 p-3 shadow-sm">
            <form asp-action="Index" method="get">
                <div class="row g-2 mb-2">
                    <div class="col-lg">
                        <label for="searchStringInputCita" class="form-label visually-hidden">Buscar</label>
                        <input type="text" id="searchStringInputCita" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control form-control-sm" placeholder="Buscar por Mascota, Dueño o Veterinario...">
                    </div>
                </div>
                <div class="row g-2 align-items-end">
                    <div class="col-md-3 col-sm-6">
                        <label for="filterStatus" class="form-label small mb-1">Estado:</label>
                        <select name="filterStatus" id="filterStatus" asp-items="ViewBag.StatusList" class="form-select form-select-sm">
                            <option value="">-- Todos --</option>
                        </select>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <label for="filterDuenoId" class="form-label small mb-1">Dueño:</label>
                        <select name="filterDuenoId" id="filterDuenoId" asp-items="ViewBag.DuenoList" class="form-select form-select-sm">
                            <option value="">-- Todos --</option>
                        </select>
                    </div>
                    <div class="col-md-3 col-sm-6">
                        <label for="filterDate" class="form-label small mb-1">Fecha:</label>
                        <input type="date" name="filterDate" id="filterDate" value="@ViewData["CurrentFilterDate"]" class="form-control form-control-sm" />
                    </div>
                    <div class="col-md-3 col-sm-12 d-flex justify-content-end align-items-end pt-3 pt-sm-0">
                        <button type="submit" class="btn btn-sm btn-secondary me-2" title="Aplicar Filtros"><i class="fas fa-filter me-1"></i> Filtrar</button>
                        <a asp-action="Index" class="btn btn-sm btn-outline-secondary" title="Limpiar Filtros"><i class="fas fa-eraser"></i> Limpiar</a>
                    </div>
                </div>
            </form>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FechaHora)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Mascota)</th>
                    @if (isAdminOrVet)
                    {
                        <th>Dueño</th>
                    }
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Veterinario)</th>
                    <th>Tipo Cita</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Estado)</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="@(isAdminOrVet ? "7" : "6")" class="text-center">
                            @if (ViewData["CurrentFilter"] != null || ViewData["CurrentFilterDate"] != null || ViewData["CurrentFilterStatus"] != null || ViewData["CurrentFilterDuenoId"] != null)
                            {
                                @:No se encontraron citas que coincidan con los filtros/búsqueda.
                            }
                            else if (User.IsInRole("Cliente"))
                            {
                                @:No tienes citas programadas.
                            }
                            else
                            {
                                @:No hay citas para mostrar.
                            }
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.FechaHora.ToString("g")</td>
                            <td>@(item.Mascota?.Nombre ?? "N/A")</td>
                            @if (isAdminOrVet)
                            {
                                <td>@(item.Mascota?.Dueño?.Nombre ?? item.Mascota?.Dueño?.UserName ?? "N/A")</td>
                            }
                            <td>@(item.Veterinario?.Nombre ?? item.Veterinario?.UserName ?? "N/A")</td>
                            <td>@(item.TipoCita?.Nombre ?? "N/A")</td>
                            <td>
                                <span class="badge @GetEstadoBadgeClass(item.Estado)">
                                    @Html.DisplayFor(modelItem => item.Estado)
                                </span>
                            </td>
                            <td>
                                <div class="btn-group" role="group" aria-label="Acciones Cita">
                                    <a asp-action="Details" asp-route-id="@item.IdCita" class="btn btn-sm btn-info" title="Detalles"><i class="fas fa-info-circle"></i></a>

                                    @if (isAdminOrVet)
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.IdCita" class="btn btn-sm btn-warning" title="Editar Cita (Admin/Vet)"><i class="fas fa-pencil-alt"></i></a>
                                        <a asp-action="Delete" asp-route-id="@item.IdCita" class="btn btn-sm btn-danger" title="Eliminar Cita (Admin/Vet)"><i class="fas fa-trash-alt"></i></a>

                                        @if (item.IdMascota > 0)
                                        {
                                            <a asp-controller="HistorialMedicos" asp-action="Create" asp-route-mascotaId="@item.IdMascota" class="btn btn-sm btn-success" title="Crear Historial Médico">
                                                <i class="fas fa-notes-medical"></i>
                                            </a>
                                        }
                                    }
                                    else if (User.IsInRole("Cliente") && item.Mascota?.IdUsuarioDueño == currentUserID)
                                    {
                                        bool canModify = item.Estado == EstadoCita.Programada && item.FechaHora > DateTime.UtcNow;
                                        if (canModify)
                                        {
                                            <a asp-action="EditCliente" asp-route-id="@item.IdCita" class="btn btn-sm btn-secondary" title="Modificar Mi Cita"><i class="fas fa-edit"></i></a>
                                            <a asp-action="CancelCliente" asp-route-id="@item.IdCita" class="btn btn-sm btn-outline-danger" title="Cancelar Mi Cita"><i class="fas fa-times-circle"></i></a>
                                        }
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@functions {
    string GetEstadoBadgeClass(string? estado)
    {
        if (string.IsNullOrEmpty(estado)) return "bg-secondary";
        switch (estado)
        {
            case EstadoCita.Programada:
                return "bg-info text-dark";
            case EstadoCita.Confirmada:
                return "bg-primary";
            case EstadoCita.Realizada:
                return "bg-success";
            case EstadoCita.CanceladaCliente:
            case EstadoCita.CanceladaStaff:
                return "bg-danger";
            case EstadoCita.NoAsistio:
                return "bg-warning text-dark";
            default:
                return "bg-secondary";
        }
    }
}

@section Scripts {
    <script>
        var alertList = document.querySelectorAll('.alert');
        alertList.forEach(function (alert) {
          new bootstrap.Alert(alert);
        });
    </script>
}