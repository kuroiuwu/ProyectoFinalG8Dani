// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal_G8.Models;

#nullable disable

namespace ProyectoFinal_G8.Migrations
{
    [DbContext(typeof(ProyectoFinal_G8Context))]
    [Migration("20250407035714_corregirCitaEstado")]
    partial class corregirCitaEstado
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoFinal_G8.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Notas")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCita");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdUsuarioVeterinario");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.DetalleFactura", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionProductoServicio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<int?>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int?>("IdTratamiento")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdFactura");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdUsuarioCliente");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.HistorialMedico", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdMascota");

                    b.ToTable("HistorialMedicos");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumo"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("PrecioCosto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PrecioVenta")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UmbralBajoStock")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdInsumo");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMascota"));

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioDueño")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Raza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMascota");

                    b.HasIndex("IdUsuarioDueño");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Tratamiento", b =>
                {
                    b.Property<int>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTratamiento"));

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdTratamiento");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Cita", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_G8.Models.Usuario", "Veterinario")
                        .WithMany("CitasComoVeterinario")
                        .HasForeignKey("IdUsuarioVeterinario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_G8.Models.Usuario", null)
                        .WithMany("CitasComoCliente")
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.DetalleFactura", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Factura", "Factura")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_G8.Models.Insumo", "Insumo")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProyectoFinal_G8.Models.Tratamiento", "Tratamiento")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Factura");

                    b.Navigation("Insumo");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Factura", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Usuario", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("IdUsuarioCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.HistorialMedico", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Mascota", "Mascota")
                        .WithMany("HistorialesMedicos")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Mascota", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Usuario", "Dueño")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdUsuarioDueño")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dueño");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoFinal_G8.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Factura", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Insumo", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Mascota", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("HistorialesMedicos");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Tratamiento", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("ProyectoFinal_G8.Models.Usuario", b =>
                {
                    b.Navigation("CitasComoCliente");

                    b.Navigation("CitasComoVeterinario");

                    b.Navigation("Facturas");

                    b.Navigation("Mascotas");
                });
#pragma warning restore 612, 618
        }
    }
}
